package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.server

import net.ccbluex.liquidbounce.FDPClient
import net.ccbluex.liquidbounce.event.*
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.ui.client.hud.element.elements.Notification
import net.ccbluex.liquidbounce.ui.client.hud.element.elements.NotifyType
import net.minecraft.network.play.server.S08PacketPlayerPosLook


class HypixelDisabler : DisablerMode("Hypixel") {
    private var op: Int? = null
    private var oq = false
    private var fk = false
    private var offGroundTicks = 0
    private var isFinished = false

    @EventTarget
    override fun onMotion(event: MotionEvent) {
        if (event.eventState == EventState.PRE) {
            if (fk && mc.thePlayer.onGround) {
                mc.thePlayer.jump()
                fk = false
                oq = false
            } else if (offGroundTicks >= 9 && oq) {
                if (offGroundTicks % 2 == 0) {
                    mc.thePlayer.posX += 0.095
                }
            }
        }
    }

    @EventTarget
    override fun onPacket(event: PacketEvent) {
        if (event.packet is S08PacketPlayerPosLook) {
            op = op!! + 1
            if (op == 20) {
                oq = false
                op = 0
                FDPClient.hud.addNotification(Notification("Disabler", "Automatically disabled Watchdog Jump check",NotifyType.INFO,1000))
                isFinished = true
            }
        }
    }

    @EventTarget
    override fun onUpdate(event: UpdateEvent) {
        if (mc.thePlayer.onGround)
            offGroundTicks = 0
        else
            offGroundTicks++
    }

    @EventTarget
    override fun onWorld(event: WorldEvent) {
        isFinished = false
        FDPClient.hud.addNotification(Notification("Disabler", "Disabling Jump check for Watchdog",NotifyType.INFO,1000))
        this.fk = true
        this.oq = false
        this.op = 0
    }
}
